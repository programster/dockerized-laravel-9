# Set the compose project name, which will affect the prefixes of docker volumes etc.
# https://docs.docker.com/compose/reference/envvars/#compose_project_name
COMPOSE_PROJECT_NAME="my_project"


# Specify a name for the built Docker image.
# Be sure to include the registry if you wish to push to a private registry
DOCKER_IMAGE_NAME="my-registry.mydomain.com:5000/my-project"


# Set the user ID of the web user within the docker container. I recommend setting this to the
# output of id -g
DOCKER_HOST_USER_ID=1000


# Set the group ID of the web user within the docker container. I recommend setting this to the
# output of id -g
DOCKER_HOST_GROUP_ID=1000


# Database Settings
# These are shared by the application and the database service.
DB_DRIVER=pgsql
DB_HOST=db
DB_PORT=5432
DB_NAME=laravel
DB_USER=root
DB_PASSWORD=


# Specify if this is a "local", "staging", or "production" environment.
ENVIRONMENT=local


# Specify whether to output debug information
APP_DEBUG=true


# Specify the name for the Laravel application.
APP_NAME="Laravel"


# Specify the URL for the application.
# This is important for things like email notifications which use this for directing the user to the
# password reset page etc.
APP_URL="http://localhost"


# Specify the key for Laravel to use for encryption etc.
# You can generate one by running
# openssl rand -base64 32 | awk '$0="base64:"$0
# or:
# head /dev/urandom | head -c 32 | base64 | awk '$0="base64:"$0'
APP_KEY=


# Specify what channel to log to.
# https://laravel.com/docs/9.x/logging#available-channel-drivers
LOG_CHANNEL=stack

# PHP, Laravel, and other libraries often notify their users that some of
# their features have been deprecated and will be removed in a future version.
# https://laravel.com/docs/9.x/logging#logging-deprecation-warnings
LOG_DEPRECATIONS_CHANNEL=null

# Specify Laravel's log level. The possible choices (in order) are:
# "debug", "info", "notice", "warning", "error", "critical", "alert", "emergency"
LOG_LEVEL=debug


# Specify the mailer settings
MAIL_MAILER=smtp
MAIL_HOST=mailhog
MAIL_PORT=1025
MAIL_USERNAME=null
MAIL_PASSWORD=null
MAIL_ENCRYPTION=null
MAIL_FROM_ADDRESS=null
MAIL_FROM_NAME="${APP_NAME}"


# Specify the driver to use for broadcasting.
# https://laravel.com/docs/9.x/broadcasting
BROADCAST_DRIVER=log


# Specify the cache driver. The default is "file" for a file based cache, but you may wish to use
# "redis" or "memcached".
# https://laravel.com/docs/9.x/cache
CACHE_DRIVER=file


# Specify the driver for the filesystem. The default "local", will store files in "storage/app" but
# you can configure others such as "ftp", "sftp", and "s3".
# https://laravel.com/docs/9.x/filesystem#the-local-driver
FILESYSTEM_DRIVER=local


# Specify the driver for the Laravel queue.
QUEUE_CONNECTION=database


# Specify the session driver. e.g. where $_SESSION data is stored. "file" is the default, but
# "database" is good needs to make use of multiple webservers for scaling.
# https://laravel.com/docs/9.x/session#configuration
SESSION_DRIVER=file


# Specify how long a session should persist in seconds after the user stops interacting (e.g. walks
# away from computer).
# Default value is 120 or 2 minutes.
SESSION_LIFETIME=120


# Everything below this line is default environment vars
# that may be used in future.
#MEMCACHED_HOST=127.0.0.1


#REDIS_HOST=127.0.0.1
#REDIS_PASSWORD=null
#REDIS_PORT=6379


#AWS_ACCESS_KEY_ID=
#AWS_SECRET_ACCESS_KEY=
#AWS_DEFAULT_REGION=us-east-1
#AWS_BUCKET=
#AWS_USE_PATH_STYLE_ENDPOINT=false


#PUSHER_APP_ID=
#PUSHER_APP_KEY=
#PUSHER_APP_SECRET=
#PUSHER_APP_CLUSTER=mt1


#MIX_PUSHER_APP_KEY="${PUSHER_APP_KEY}"
#MIX_PUSHER_APP_CLUSTER="${PUSHER_APP_CLUSTER}"

